%{
/**
 * @file
 * Egress text parser (generated by flex)
 */
#include <stdio.h>
#include <string.h>
#include "eg_enc.h"
#include "eg_parse.tab.h"

int yywrap(void){ return 1;}
%}
%option yylineno

DIGIT       [0-9]
HEXDIGIT    [0-9a-fA-F]

%%
-?{DIGIT}+ {
    yylval.string = strdup(yytext);
    return DECNUM;
}
0x{HEXDIGIT}+ {
    yylval.string = strdup(yytext);
    return HEXNUM;
}
{HEXDIGIT}{2}:{HEXDIGIT}{2}:{HEXDIGIT}{2}:{HEXDIGIT}{2}:{HEXDIGIT}{2}:{HEXDIGIT}{2} {
    yylval.string = strdup(yytext);
    return MACADDR;
}
{DIGIT}{1,3}\.{DIGIT}{1,3}\.{DIGIT}{1,3}\.{DIGIT}{1,3} {
    yylval.string = strdup(yytext);
    return IPV4ADDR;
}
[0-9a-fA-F]*:[0-9a-fA-F:]+ {
    yylval.string = strdup(yytext);
    return IPV6ADDR;
}
[_\-0-9a-zA-Z]+ {
    yylval.string = strdup(yytext);
    return KEY;
}
[_\-0-9a-zA-Z,]+ {
    yylval.string = strdup(yytext);
    return KEYWORD;
}
\".*\" {
    yylval.string = strdup(yytext);
    return STRING;
}
"=" { return EQUAL; }
"{" { return LCBR; }
"}" { return RCBR; }

"#"[^\n]*       /* eat up one-line comments */
[ \t\r\n]+      /* eat up whitespace */

.   { return CHAR; }
%%
